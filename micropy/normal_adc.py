from machine import Pin, PWM, ADC, Timer
import time 
import os
import math
def filter(q):
    global coef
    q_filt = [a * b for a, b in zip(q, coef)]
    return sum(q_filt)
def iir_filter(q,q_filt_iir):
    global num,den
    q_filt_num=sum([a * b for a, b in zip(q, num[::-1])])
    q_filt_den=sum([a * b for a, b in zip(q_filt_iir[1:], den[:0:-1])])
    q_filt=q_filt_num-q_filt_den
    return(q_filt)
def get_duty(force,popt):
    dutys=(-popt[1]+math.sqrt(popt[1]*popt[1]-4*popt[0]*(popt[2]-force)))/(2*popt[0])
    dutys=round(dutys)
    return dutys
def write_data(step,q_filt,q_filt_iir):
    lect=input_adc.read()
    global elapsed_time
    elapsed_time=elapsed_time+step
    global q #filter input
    q.append(lect)
    #global i
    #iir filter
    #if(len(q)>5):
    #    q.pop(0)
    #    q_filt_iir.pop(0)
    #    q_filt=iir_filter(q,q_filt_iir)#filter output
    #    q_filt_iir.append(q_filt)
    #fir filter
    #if(i>49):
    if(len(q)>50):
        q.pop(0)
    q_filt=filter(q)#filter output
    #i=i+1
    file.write(str(elapsed_time)+' '+str(lect)+' '+str(q_filt)+'\n')
    #file.write(str(elapsed_time)+' '+str(lect)+' '+str(q_filt_iir[4])+'\n')
    return None
os.remove('data.txt')
file=open('data.txt','w')
#header
#file.write('Time'+' '+'Angle'+'\n')
ESC=PWM(Pin(5),freq=50)
popt=[-2.09182685e-03,3.41304157e-01,-1.22589854e+01]
#coef=[6.71943515e-19,7.20979134e-05,2.93504957e-04,6.78941261e-04,1.25126740e-03,2.03921831e-03,3.07445172e-03,4.38812165e-03,6.00722378e-03,7.95097864e-03,1.02275202e-02,1.28311406e-02,1.57403093e-02,1.89166343e-02,2.23048749e-02,2.58340478e-02,2.94195928e-02,3.29665012e-02,3.63732385e-02,3.95362445e-02,4.23547504e-02,4.47356301e-02,4.65979965e-02,4.78772663e-02,4.85284471e-02,4.85284471e-02,4.78772663e-02,4.65979965e-02,4.47356301e-02,4.23547504e-02,3.95362445e-02,3.63732385e-02,3.29665012e-02,2.94195928e-02,2.58340478e-02,2.23048749e-02,1.89166343e-02,1.57403093e-02,1.28311406e-02,1.02275202e-02,7.95097864e-03,6.00722378e-03,4.38812165e-03,3.07445172e-03,2.03921831e-03,1.25126740e-03,6.78941261e-04,2.93504957e-04,7.20979134e-05,6.71943515e-19]
#coef=[ 3.37312348e-04, -5.50645093e-04, -8.24928965e-04 , 1.16979121e-03, 1.59574132e-03, -2.11431902e-03, -2.73831916e-03,  3.48212723e-03, 4.36221447e-03, -5.39786580e-03, -6.61225259e-03,  8.03402765e-03, 9.69973153e-03, -1.16574988e-02, -1.39729236e-02,  1.67386666e-02, 2.00908714e-02, -2.42387318e-02, -2.95213551e-02,  3.65266372e-02, 4.63685905e-02, -6.14399942e-02, -8.79712285e-02,  1.48824095e-01, 4.49810256e-01,  4.49810256e-01,  1.48824095e-01, -8.79712285e-02,-6.14399942e-02,  4.63685905e-02,  3.65266372e-02, -2.95213551e-02,-2.42387318e-02,  2.00908714e-02,  1.67386666e-02, -1.39729236e-02,-1.16574988e-02,  9.69973153e-03,  8.03402765e-03, -6.61225259e-03,-5.39786580e-03,  4.36221447e-03,  3.48212723e-03, -2.73831916e-03,-2.11431902e-03,  1.59574132e-03,  1.16979121e-03, -8.24928965e-04,-5.50645093e-04,  3.37312348e-04]
#coef=[0.00047211,  0.00069525,  0.00082659,  0.00075256,  0.00035374, -0.0004687,-0.00176165, -0.00348913, -0.00550777, -0.00755492, -0.00925459, -0.01014383,-0.00971924, -0.00749963, -0.00309747,  0.00371057,  0.01292508,  0.02428749, 0.03727391,  0.05112312,  0.06489804,  0.07757464,  0.08814819,  0.09574316, 0.09971248,  0.09971248,  0.09574316,  0.08814819,  0.07757464,  0.06489804, 0.05112312,  0.03727391,  0.02428749,  0.01292508,  0.00371057, -0.00309747,-0.00749963, -0.00971924, -0.01014383, -0.00925459, -0.00755492, -0.00550777,-0.00348913, -0.00176165, -0.0004687 ,  0.00035374,  0.00075256,  0.00082659, 0.00069525,  0.00047211]
#coef=[-1.78558685e-19 , 1.80132766e-05,  6.07635717e-05,  9.44147797e-05, 6.28648711e-05, -1.07677869e-04, -4.96476758e-04, -1.16648420e-03,-2.13366763e-03, -3.33175709e-03, -4.58037470e-03, -5.56686982e-03,-5.85211172e-03, -4.90736703e-03, -2.18341253e-03,  2.79471156e-03, 1.03216409e-02,  2.04143294e-02,  3.27452273e-02,  4.66247879e-02, 6.10443087e-02,  7.47789180e-02,  8.65382026e-02,  9.51412938e-02, 9.96867227e-02,  9.96867227e-02,  9.51412938e-02,  8.65382026e-02, 7.47789180e-02,  6.10443087e-02,  4.66247879e-02,  3.27452273e-02, 2.04143294e-02,  1.03216409e-02,  2.79471156e-03, -2.18341253e-03,-4.90736703e-03, -5.85211172e-03, -5.56686982e-03, -4.58037470e-03,-3.33175709e-03, -2.13366763e-03, -1.16648420e-03, -4.96476758e-04,-1.07677869e-04,  6.28648711e-05,  9.44147797e-05,  6.07635717e-05, 1.80132766e-05, -1.78558685e-19]#b = signal.firwin(50, 0.1, window=('blackman'))
#coef=[-6.15834327e-19 , 6.66013437e-05 , 2.73181148e-04 , 6.36487439e-04,1.18107892e-03,  1.93737566e-03,  2.93893899e-03,  4.21916955e-03,5.80766201e-03,  7.72648808e-03,  9.98669369e-03,  1.25852890e-02,1.55029835e-02,  1.87028722e-02,  2.21302172e-02,  2.57133974e-02,2.93660164e-02,  3.29900814e-02,  3.64800887e-02,  3.97277849e-02,4.26273231e-02,  4.50805029e-02,  4.70017670e-02,  4.83226441e-02,4.89953554e-02,  4.89953554e-02,  4.83226441e-02,  4.70017670e-02,4.50805029e-02,  4.26273231e-02,  3.97277849e-02,  3.64800887e-02,3.29900814e-02,  2.93660164e-02,  2.57133974e-02,  2.21302172e-02,1.87028722e-02,  1.55029835e-02,  1.25852890e-02,  9.98669369e-03,7.72648808e-03,  5.80766201e-03,  4.21916955e-03,  2.93893899e-03,1.93737566e-03,  1.18107892e-03,  6.36487439e-04,  2.73181148e-04,6.66013437e-05, -6.15834327e-19]
coef=[ 0.03138181 , 0.00042372, -0.0035203,  -0.00882821, -0.01369309, -0.01621873,-0.01497537,-0.00960664, -0.0010932 ,  0.00836272,  0.01584683,  0.01853028, 0.01459482, 0.00405724, -0.01088885, -0.02611649, -0.03667689, -0.03748184,-0.02523303, 0.00085767,  0.03834576,  0.08196561,  0.12447044,  0.15821672, 0.17687259, 0.17687259,  0.15821672,  0.12447044,  0.08196561,  0.03834576, 0.00085767,-0.02523303, -0.03748184, -0.03667689, -0.02611649, -0.01088885, 0.00405724, 0.01459482,  0.01853028,  0.01584683,  0.00836272, -0.0010932,-0.00960664,-0.01497537, -0.01621873, -0.01369309, -0.00882821, -0.0035203, 0.00042372, 0.03138181]
num=[8.98486146e-07,3.59394459e-06,5.39091688e-06,3.59394459e-06,8.98486146e-07]
den=[1,-3.83582554,5.52081914,-3.53353522,0.848556]
q=[]
q_filt=0
q_filt_iir=[]
input_adc=ADC(0)
#for i in range(6):
#    q_filt_iir.append(input_adc.read())
for i in range(50):
    q.append(input_adc.read())
qd=0
print('Inicia la Activacion del Motor')
ESC.duty(51)
#time.sleep_ms(5000)
#start_time=time.time()
#start_time=time.ticks_us()
seconds=10
step=40#in milliseconds
i=0
print('Empieza el Experimento')
elapsed_time=0
tim=Timer(-1)
tim.init(period=step, mode=Timer.PERIODIC, callback=lambda t:write_data(step,q_filt,q_filt_iir))
time.sleep(seconds)
tim.deinit()
#while True:
#    #current_time = time.time()
#    current_time = time.ticks_us()
#    #elapsed_time = current_time - start_time
#    elapsed_time = time.ticks_diff(current_time,start_time)*1e-6
#    if elapsed_time > seconds:
#        break
#    lect=input_adc.read()
#    ESC.duty(60)
#    file.write(str(elapsed_time)+' '+str(lect)+'\n')
ESC.duty(51)
file.close()
print('Experimento Acabado')